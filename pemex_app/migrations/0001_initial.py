# Generated by Django 2.1 on 2018-09-21 18:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FieldInputsEng',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('item', models.IntegerField(blank=True, null=True)),
                ('item_status', models.TextField(blank=True, null=True)),
                ('input_user', models.TextField(blank=True, null=True)),
                ('input_date', models.DateTimeField(blank=True, null=True)),
                ('input_comment_eng', models.TextField(blank=True, null=True)),
                ('input_comment_esp', models.TextField(blank=True, null=True)),
                ('language', models.IntegerField(blank=True, null=True)),
                ('seq_num', models.IntegerField(blank=True, null=True)),
                ('next_responsible', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Field Inputs View Eng',
                'db_table': 'field_inputs_eng',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemEng',
            fields=[
                ('item_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('installation', models.TextField(blank=True, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('criteria', models.TextField(blank=True, null=True)),
                ('next_responsible', models.CharField(blank=True, max_length=80, null=True)),
                ('next_action', models.TextField(blank=True, null=True)),
                ('applicability', models.BooleanField(blank=True, null=True)),
                ('language', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Items English View',
                'db_table': 'item_eng',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Criteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc_eng', models.TextField(blank=True, null=True)),
                ('desc_esp', models.TextField(blank=True, null=True)),
                ('trans_eng', models.BooleanField(blank=True, null=True)),
                ('trans_esp', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('criteria_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Criteria',
                'db_table': 'criteria',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('document', models.FileField(blank=True, null=True, upload_to='pemex_app.FileStorage/bytes/filename/mimetype')),
            ],
            options={
                'db_table': 'documents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Evidences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('desc_eng', models.TextField(blank=True, null=True)),
                ('desc_esp', models.TextField(blank=True, null=True)),
                ('evidence_date', models.DateTimeField(blank=True, null=True)),
                ('trans_eng', models.BooleanField(blank=True, null=True)),
                ('trans_esp', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Evidences',
                'db_table': 'evidences',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FieldInputs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_date', models.DateTimeField(blank=True, null=True)),
                ('seq_num', models.IntegerField(blank=True, null=True)),
                ('internal_comments_eng', models.TextField(blank=True, null=True)),
                ('internal_comments_esp', models.TextField(blank=True, null=True)),
                ('external_comments_eng', models.TextField(blank=True, null=True)),
                ('external_comments_esp', models.TextField(blank=True, null=True)),
                ('deficiencies_eng', models.TextField(blank=True, null=True)),
                ('deficiencies_esp', models.TextField(blank=True, null=True)),
                ('future_actions_eng', models.TextField(blank=True, null=True)),
                ('future_actions_esp', models.TextField(blank=True, null=True)),
                ('trans_eng', models.BooleanField(blank=True, null=True)),
                ('trans_esp', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Field Inputs',
                'db_table': 'field_inputs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Filemap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map_date', models.DateTimeField(blank=True, null=True)),
                ('doc_comment_eng', models.TextField(blank=True, null=True)),
                ('doc_comment_esp', models.TextField(blank=True, null=True)),
                ('trans_eng', models.BooleanField(blank=True, null=True)),
                ('trans_esp', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'filemap',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FileStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bytes', models.TextField()),
                ('filename', models.CharField(max_length=255)),
                ('mimetype', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'file_storage',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Installations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('activo', models.TextField(blank=True, null=True)),
                ('processing_center', models.TextField(blank=True, null=True)),
                ('platform_count', models.IntegerField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Installations',
                'db_table': 'installations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicable', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Items',
                'db_table': 'items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'languages',
                'db_table': 'languages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recommendations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('part', models.TextField(blank=True, null=True)),
                ('desc_eng', models.TextField(blank=True, null=True)),
                ('desc_esp', models.TextField(blank=True, null=True)),
                ('summary_eng', models.TextField(blank=True, null=True)),
                ('summary_esp', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Recommendations',
                'db_table': 'recommendations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc_eng', models.TextField(blank=True, null=True)),
                ('desc_esp', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Status',
                'db_table': 'status',
                'managed': True,
            },
        ),
    ]
